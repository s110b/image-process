# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: s110b/360
          path: app1
      - name: Checkout Second Repository
        uses: actions/checkout@v4
        with:
          path: app2
          ref: 'after'  # 指定分支名
          
     - name: Clear and Copy Files
       run: |
       # 清空 app1/photos/original 目录
       rm -rf app1/photos/original/*
       echo "Cleared app1/photos/original directory."

       # 确保 app1/photos/original 目录存在
       mkdir -p app1/photos/original
   
       # 将文件从 app2/after 复制到 app1/photos/original
       cp -r app2/after/* app1/photos/original/
       echo "Files copied from app2/after to app1/photos/original."

        
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Install libvips
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips

      - name: Install Dependencies
        run: |
         cd app
         bundle install

      - name: Build with Jekyll
        run: |
         cd app
         bundle exec jekyll build --baseurl qq

      - name: echo baseurl log
        run:  echo qq
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2
        with:
          path: app/_site  # 指向正确的 _site 目录
      - name: Print _site Directory Structure
        run: |
          sudo apt-get install -y tree
          tree app/_site
